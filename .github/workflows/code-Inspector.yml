# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
      - name: Code Inspector GitHub action
          # You may pin to the exact commit or the version.
          # uses: codeinspectorio/github-action@01c818be303e2c4bcec991ca1c51feab753a1e2a
          uses: codeinspectorio/github-action@v1
          with:
            # Token to checkout the repository.
            repo_token: 
            # Access key on Code Inspector
            code_inspector_access_key: 
            # Secret key on Code Inspector
            code_inspector_secret_key: 
            # Minimum grade. Valid options are EXCELLENT, GOOD, NEUTRAL, WARNING, CRITICAL. Leave blank to ignore.
            min_quality_grade: # default is 
            # Minimum quality score from 0 (worst) to 100 (best)
            min_quality_score: # default is 0
            # Maximum defect rate per line of code (e.g. 0.01 for 1 defect per 100 lines of code). Leave 0 to ignore.
            max_defects_rate: # default is 0
            # Maximum number of complex functions rate (e.g. number of complex functions / number of functions). Leave 0 to ignore.
            max_complex_functions_rate: # default is 0
            # Maximum number of long functions rate (e.g. number of long functions / number of functions). Leave 0 to ignore.
            max_long_functions_rate: # default is 0
            # Project on code inspector. Will use the preferences of this analysis. Leave blank and no preferences are used
            project_name: # default is 
            # Timeout before giving up (in case analysis takes too long). Default is 10 minutes
            max_timeout_sec: # default is 600
